import type { NextPage } from "next";
import Head from "next/head";
import styles from "../styles/Home.module.css";
import Button from "@mui/material/Button";
import { useEffect, useState } from "react";
import { usePolyanets } from "../src/hooks/usePolyanets";
import { useMap } from "../src/hooks/useMap";
import LoadingButton from "@mui/lab/LoadingButton";
import Alert from "@mui/material/Alert";
import { drawGoalMap } from "../src/UI/Goal";
import { drawMyMap } from "../src/UI/MyMap";

const Home: NextPage = () => {
  // variables, states
  const [goal, setGoal] = useState<[]>([]);
  const [map, setMap] = useState<[]>([]);

  const [successInfo, setSuccessInfo] = useState("");

  // functions, variables from hooks
  const {
    createPolyanets,
    deletePolyanets,
    isCreateLoading: isCreateLoadingPhase1,
    isDeleteLoading: isDeleteLoadingPhase1,
  } = usePolyanets();
  const { fetchMap: fetchGoalMap, fetchMyMap } = useMap();

  // async functions
  async function getGoalMap() {
    const goalMap = await fetchGoalMap();
    setGoal(goalMap);
  }

  async function getMyMap() {
    const myMap = await fetchMyMap();
    console.log(myMap.content);
    setMap(myMap.content);
  }

  // on initial load
  useEffect(() => {
    getGoalMap();
    getMyMap();
  }, []);

  const GoalMap = () => (
    <div>
      <div className={styles.inline}>
        <h2>Goal Map</h2>
      </div>
      <div>{goal && goal.map(drawGoalMap)}</div>
    </div>
  );
  const MyMap = () => (
    <div>
      <div className={styles.inline}>
        <h2>My Map</h2>
        <Button
          variant="outlined"
          onClick={() => {
            getMyMap();
          }}
        >
          Fetch Map
        </Button>
      </div>
      <div>{map && map.map(drawMyMap)}</div>
    </div>
  );

  return (
    <div className={styles.container}>
      <Head>
        <title>Megaverse challenge | Anum </title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Welcome to Megaverse Challenge!</h1>
        <h3 className={styles.subtitle}>Completed by Anum</h3>

        <div className={styles.grid}>
          <div className={styles.card}>
            <h2>Phase1</h2>
            <p>Polyanet Cross 🪐 🪐 Click the button below 🪐 🪐 </p>
            <br />
            <div>
              {isCreateLoadingPhase1 ? (
                <LoadingButton
                  loading={isCreateLoadingPhase1}
                  loadingIndicator="Loading…"
                  variant="outlined"
                >
                  Loading ...
                </LoadingButton>
              ) : (
                <Button
                  variant="outlined"
                  onClick={async () => {
                    const result = await createPolyanets(() => {
                      getMyMap();
                    });

                    if (result) {
                      setSuccessInfo(result.success);
                    }
                  }}
                >
                  Create
                </Button>
              )}
            </div>
            <div>
              {isDeleteLoadingPhase1 ? (
                <LoadingButton
                  loading={isDeleteLoadingPhase1}
                  loadingIndicator="Loading…"
                  variant="outlined"
                >
                  Loading ...
                </LoadingButton>
              ) : (
                <Button
                  variant="outlined"
                  onClick={async () => {
                    const result = await deletePolyanets(() => {
                      getMyMap();
                    });

                    if (result) {
                      setSuccessInfo(result.success);
                    }
                  }}
                >
                  Reset Map
                </Button>
              )}
            </div>
          </div>
          <div className={styles.card}>
            <h2>Phase 2</h2>
            <p>Crossmint logo. With 🌙SOLoons and ☄comETHs!</p>
            <br />
            <div>
              <Button variant="outlined" onClick={() => {}}>
                Create
              </Button>
            </div>
            <div>
              <Button variant="outlined" onClick={() => {}}>
                Reset Map
              </Button>
            </div>
          </div>
        </div>

        {successInfo ? (
          <>
            <Alert variant="outlined" severity="success">
              {successInfo}
            </Alert>
          </>
        ) : (
          <></>
        )}
        <div className={styles.inline}>
          <GoalMap />
          <MyMap />
        </div>
      </main>

      <footer className={styles.footer}></footer>
    </div>
  );
};

export default Home;
